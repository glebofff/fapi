"""initial

Revision ID: b6520ca9d65f
Revises: 
Create Date: 2020-04-04 20:17:26.045309

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'b6520ca9d65f'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('agent',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('abbr', sa.String(length=12), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_agent_abbr'), 'agent', ['abbr'], unique=True)
    op.create_table('currency',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('abbr', sa.String(length=3), nullable=False),
    sa.Column('code', sa.SmallInteger(), nullable=True),
    sa.Column('description', sa.String(length=128), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('abbr'),
    sa.UniqueConstraint('code')
    )
    op.create_index('currency_abbr_idx', 'currency', ['abbr'], unique=False, postgresql_using='hash')
    op.create_index('currency_code_idx', 'currency', ['code'], unique=False, postgresql_using='hash')
    op.create_table('tag',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('tag', sa.String(length=64), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tag_tag'), 'tag', ['tag'], unique=True)
    op.create_table('region',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('code', sa.String(length=3), nullable=True),
    sa.Column('name', sa.String(length=200), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_region_code'), 'region', ['code'], unique=True)
    op.create_table('account',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('phone', sa.String(length=15), nullable=False),
    sa.Column('agent_id', sa.Integer(), nullable=False),
    sa.Column('contract_number', sa.String(length=64), nullable=True),
    sa.Column('status', sa.Boolean(), nullable=True),
    sa.Column('type', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('credit_limit', sa.Numeric(precision=12, scale=3), nullable=True),
    sa.Column('trans_limit', sa.Numeric(precision=12, scale=3), nullable=True),
    sa.Column('daily_limit', sa.Numeric(precision=12, scale=3), nullable=True),
    sa.ForeignKeyConstraint(['agent_id'], ['agent.id'], ),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('agent_id', 'contract_number')
    )
    op.create_index(op.f('ix_account_currency_id'), 'account', ['currency_id'], unique=False)
    op.create_index(op.f('ix_account_email'), 'account', ['email'], unique=False)
    op.create_index(op.f('ix_account_phone'), 'account', ['phone'], unique=False)
    op.create_index(op.f('ix_account_region_id'), 'account', ['region_id'], unique=False)
    op.create_index(op.f('ix_account_status'), 'account', ['status'], unique=False)
    op.create_table('api_user',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('uuid', postgresql.UUID(as_uuid=True), nullable=True),
    sa.Column('region_id', sa.Integer(), nullable=True),
    sa.Column('currency_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['currency_id'], ['currency.id'], ),
    sa.ForeignKeyConstraint(['region_id'], ['region.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_api_user_name'), 'api_user', ['name'], unique=False)
    op.create_index(op.f('ix_api_user_uuid'), 'api_user', ['uuid'], unique=False)
    op.create_table('account_tags',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('account_id', sa.Integer(), nullable=True),
    sa.Column('tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['account_id'], ['account.id'], ),
    sa.ForeignKeyConstraint(['tag_id'], ['tag.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_account_tags_account_id'), 'account_tags', ['account_id'], unique=False)
    op.create_index(op.f('ix_account_tags_tag_id'), 'account_tags', ['tag_id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_account_tags_tag_id'), table_name='account_tags')
    op.drop_index(op.f('ix_account_tags_account_id'), table_name='account_tags')
    op.drop_table('account_tags')
    op.drop_index(op.f('ix_api_user_uuid'), table_name='api_user')
    op.drop_index(op.f('ix_api_user_name'), table_name='api_user')
    op.drop_table('api_user')
    op.drop_index(op.f('ix_account_status'), table_name='account')
    op.drop_index(op.f('ix_account_region_id'), table_name='account')
    op.drop_index(op.f('ix_account_phone'), table_name='account')
    op.drop_index(op.f('ix_account_email'), table_name='account')
    op.drop_index(op.f('ix_account_currency_id'), table_name='account')
    op.drop_table('account')
    op.drop_index(op.f('ix_region_code'), table_name='region')
    op.drop_table('region')
    op.drop_index(op.f('ix_tag_tag'), table_name='tag')
    op.drop_table('tag')
    op.drop_index('currency_code_idx', table_name='currency')
    op.drop_index('currency_abbr_idx', table_name='currency')
    op.drop_table('currency')
    op.drop_index(op.f('ix_agent_abbr'), table_name='agent')
    op.drop_table('agent')
    # ### end Alembic commands ###
